# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  inputs,
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:
let
  pkgs-hyprland = inputs.hyprland.inputs.nixpkgs.legacyPackages.${pkgs.stdenv.hostPlatform.system};
in
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [
    # "amdgpu"
  ];
  boot.extraModulePackages = [
    # config.boot.kernelPackages.ddcci-driver
  ];
  boot.kernelModules = [
    "kvm-intel"
    "i2c-dev"
    "ddcci_backlight"
  ];
  boot.kernelParams = [
    "acpi_backlight=native"
  ];

  boot.kernelPackages = pkgs.linuxPackages_latest;

  # enable trim for ssd
  fileSystems."/".options = [
    "noatime"
    "nodiratime"
    "discard"
  ];

  hardware.acpilight.enable = true;
  services.udev.extraRules = ''
    KERNEL=="i2c-[0-9]*", GROUP="i2c", MODE="0660"
  '';

  hardware.graphics = {
    enable = true;
    enable32Bit = true;

    extraPackages = with pkgs; [
      amdvlk
    ];
    extraPackages32 = with pkgs; [
      driversi686Linux.amdvlk
    ];
  };

  # hardware.amdgpu = {
  #   initrd.enable = true;
  #   opencl.enable = true;

  #   amdvlk = {
  #     enable = true;
  #     support32Bit.enable = true;
  #   };
  # };

  hardware.i2c.enable = true;
  hardware.bluetooth.enable = true; # enables support for Bluetooth
  hardware.bluetooth.powerOnBoot = true; # powers up the default Bluetooth controller on boot
  hardware.logitech.wireless.enable = true;
  hardware.brillo.enable = true;
  hardware.xone.enable = true; # enables support for xbox controller
  hardware.steam-hardware.enable = true; # enables support for steam udev controllers

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  # hardware.logitech.wireless.enable = true;
  # hardware.logitech.wireless.enableGraphical = true;
}
